<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY rfc2119 SYSTEM 'bibxml/reference.RFC.2119.xml'>      
<!ENTITY rfc4287 SYSTEM 'bibxml/reference.RFC.4287.xml'>      
<!ENTITY xmlns SYSTEM 'bibxml/reference.W3C.REC-xml-names-19990114.xml'>      
<!ENTITY rdfsg SYSTEM 'bibxml/reference.W3C.WD-rdf-syntax-grammar-20031010.xml'>      
]>
<rfc docName="draft-hanson-oauth-cotc-latest">
  <front>
    <title>OAuth 2.0 Cross-Origin Token Confirmation</title>
    <author initials="J." surname="Hanson" fullname="Jared Hanson">
      <organization>Auth0 Inc.</organization>
      <address>       
        <email>jaredhanson@gmail.com</email> 
        <uri>http://www.jaredhanson.net/</uri>       
      </address>
    </author>
    <date/>
    <abstract>
      <t>
        This specification describes how to declare in a JWT that the presenter
        of a JWT is a User Agent through which a verifier can be obtained.  It
        further specifies how the reciever can obtain the verifier and confirm
        that the User Agent is authorized to present the security token.
        Confirmation in this manner protects these tokens from token export
        attacks.
      </t>
    </abstract>
  </front>
  <middle>
  
    <section title="Introduction">
      <t>
        This specification describes how to declare in a JWT that the presenter
        of a JWT is a User Agent through which a verifier can be obtained.  It
        further specifies how the reciever can obtain the verifier and confirm
        that the User Agent is authorized to present the security token.
        Confirmation in this manner protects these tokens from token export
        attacks.
      </t>
      <t>
        Token confirmation improves security in federated scenarios, and in
        particular federated scenarios that start Identity Provider.  In an
        IdP-initiated Federated Sign-On protocol, an Identity Provider issues
        an identity token to a User Agent, which sends the identity token to a
        Relying Party to authenticate itself.  Examples of this include OpenID
        Connect (where the identity token is called "ID Token") and SAML (where
        the identity token is a SAML assertion).
      </t>
      <t>
        In such an IdP-initiated flow, the identity token is a bearer token and
        can be used by any User Agent in posession of the token.  Bearer tokens
        can be exported from the User Agent and replayed in a different User
        Agent, leaving such flows vulnerable to cross-site request forgery.
      </t>
      <t>
        This specification allows the issuer of a security token to indicate
        that a verifier is obtainable via the User Agent to which the token was
        issued.  The Relying Party can confirm this verifier via the User Agent,
        thereby protecting against token export attacks.
      </t>
    </section>
    
  </middle>
  <back>
    <references title="Normative References">
      <?rfc include="reference.RFC.2119"?>
      <?rfc include="reference.RFC.4627"?>
      <?rfc include="reference.RFC.6749"?>
      <?rfc include='http://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.draft-ietf-oauth-discovery-05.xml'?>
    </references>
  </back>
</rfc>
